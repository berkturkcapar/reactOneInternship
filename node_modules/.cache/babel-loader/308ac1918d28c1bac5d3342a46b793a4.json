{"ast":null,"code":"var _jsxFileName = \"/Users/berkturkcapar/Desktop/internship-projects/liveCodingHomework/reactOneInternship/src/Pages/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport CustomButton from \"../components/CustomButton\";\nimport clsx from \"clsx\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  box: {\n    margin: \"100px\"\n  },\n  outerBox: {\n    marginTop: \"25px\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  innerBox: {\n    margin: \"25px\"\n  },\n  buttonGroup: {\n    marginRight: \"25px\"\n  },\n  button: {\n    margin: \"10px\",\n    marginRight: \"90px\"\n  },\n  formControl: {\n    minWidth: \"200px\"\n  },\n  inputField: {\n    minWidth: \"150px\"\n  },\n  leftBox: {\n    width: \"800px\",\n    float: \"left\"\n  },\n  rightBox: {\n    width: \"400px\",\n    float: \"right\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 650,\n    margin: \"25px\"\n  },\n  buttonBox: {\n    justifyContent: \"center\",\n    marginLeft: \"-10px\"\n  }\n});\n\nfunction createUser(userName, surname, country, weight, height, gender, isImperialUnit) {\n  return {\n    userName,\n    surname,\n    country,\n    weight,\n    height,\n    gender,\n    isImperialUnit\n  };\n}\n\nconst rows = [createUser(\"Berk\", \"Türkçapar\", \"Turkey\", 80, 180, \"Male\", \"false\"), createUser(\"Mert\", \"Dönmez\", \"Turkey\", 80, 180, \"Male\", \"false\"), createUser(\"Yiğit\", \"Ekin\", \"Turkey\", 80, 180, \"Male\", \"false\")];\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const [userName, setUserName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [weight, setWeight] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [gender, setGender] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [isImperialUnit, setIsImperialUnit] = useState(false);\n  const [users, setUsers] = useState([]);\n  const switchRef = useRef();\n  useEffect(() => {\n    getCountries();\n  }, []);\n  useEffect(() => {\n    var _JSON$parse;\n\n    const usersData = localStorage.getItem(\"userData\");\n    ((_JSON$parse = JSON.parse(usersData)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.users) && setUsers(JSON.parse(usersData).users);\n  }, []);\n\n  const surnameHandler = value => {\n    setSurname(value);\n  };\n\n  const userNameHandler = value => {\n    setUserName(value);\n  };\n\n  const weightHandler = value => {\n    setWeight(value);\n  };\n\n  const heightHandler = value => {\n    setHeight(value);\n  };\n\n  const genderHandler = value => {\n    setGender(value);\n  };\n\n  const unitHandler = () => {\n    setIsImperialUnit(oldState => !oldState);\n  };\n\n  const countryHandler = value => {\n    setCountry(value);\n  };\n\n  const getSwitchInfo = () => {\n    console.log(switchRef);\n  };\n\n  const submitHandler = () => {\n    const userInfo = {\n      userName,\n      surname,\n      country,\n      weight,\n      height,\n      gender,\n      isImperialUnit\n    };\n    const updatedUsers = [...users, userInfo];\n    setUsers(updatedUsers);\n    const currentUsers = JSON.stringify(updatedUsers);\n    const stringUserInfo = JSON.stringify(userInfo);\n    localStorage.setItem(\"userInformation\", stringUserInfo);\n    localStorage.setItem(\"userData\", currentUsers);\n  };\n\n  const getCountries = () => {\n    axios.get(\"https://countriesnow.space/api/v0.1/countries\").then(res => {\n      const countryArr = res.data.data.map((countryItem, index) => {\n        return {\n          countryName: countryItem.country,\n          id: index\n        };\n      });\n      setCountries(countryArr);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.box,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      className: classes.leftBox,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classes.outerBox,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.inputField,\n            id: \"name-input\",\n            label: \"Name\",\n            variant: \"outlined\",\n            onChange: e => userNameHandler(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.inputField,\n            required: true,\n            id: \"surname-input\",\n            label: \"Surname\",\n            variant: \"outlined\",\n            onChange: e => surnameHandler(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"coutry-label\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"country-label\",\n              id: \"country-select\",\n              value: country,\n              onChange: e => countryHandler(e.target.value),\n              children: countries.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.id,\n                children: item.countryName\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.outerBox,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.inputField,\n            label: \"Weight\",\n            type: \"number\",\n            id: \"weight-input\",\n            onChange: e => weightHandler(e.target.value),\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: isImperialUnit ? \"Lbs\" : \"Kg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.inputField,\n            ref: switchRef,\n            label: \"Height\",\n            id: \"height-input\",\n            type: \"number\",\n            onChange: e => heightHandler(e.target.value),\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: isImperialUnit ? \"Inc\" : \"Cm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: isImperialUnit,\n              onChange: () => unitHandler(),\n              name: \"checkedA\",\n              inputProps: {\n                \"aria-label\": \"secondary checkbox\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this),\n            label: \"Is Unit Imperial\",\n            labelPlacement: \"top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.rightBox,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classes.innerBox,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: clsx(classes.buttonGroup, classes.button),\n          component: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            \"aria-label\": \"gender\",\n            name: \"gender1\",\n            value: gender,\n            onChange: e => genderHandler(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"female\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 26\n              }, this),\n              label: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"male\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 55\n              }, this),\n              label: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"other\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 26\n              }, this),\n              label: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.buttonBox,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(CustomButton, {\n            buttonFunction: () => submitHandler(),\n            buttonText: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(CustomButton, {\n            buttonFunction: () => getSwitchInfo(),\n            buttonText: \"Get Ref Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Surname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Weight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Height\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: user.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: user.surname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: countries[user.country].countryName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: user.weight + (user.isImperialUnit ? \"(lbs)\" : \"(kg)\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: user.height + (user.isImperialUnit ? \"(inch)\" : \"(cm)\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: user.gender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"dTTJytjGKR7E15pa6JImO2nYk3Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/berkturkcapar/Desktop/internship-projects/liveCodingHomework/reactOneInternship/src/Pages/Form.js"],"names":["React","useState","useEffect","useRef","TextField","Box","makeStyles","InputAdornment","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Switch","InputLabel","MenuItem","Select","axios","CustomButton","clsx","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","box","margin","outerBox","marginTop","display","justifyContent","innerBox","buttonGroup","marginRight","button","formControl","minWidth","inputField","leftBox","width","float","rightBox","table","buttonBox","marginLeft","createUser","userName","surname","country","weight","height","gender","isImperialUnit","rows","Form","classes","setUserName","setSurname","setWeight","setHeight","setGender","setCountry","countries","setCountries","setIsImperialUnit","users","setUsers","switchRef","getCountries","usersData","localStorage","getItem","JSON","parse","surnameHandler","value","userNameHandler","weightHandler","heightHandler","genderHandler","unitHandler","oldState","countryHandler","getSwitchInfo","console","log","submitHandler","userInfo","updatedUsers","currentUsers","stringify","stringUserInfo","setItem","get","then","res","countryArr","data","map","countryItem","index","countryName","id","e","target","item","startAdornment","user"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport CustomButton from \"../components/CustomButton\";\nimport clsx from \"clsx\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  box: {\n    margin: \"100px\",\n  },\n  outerBox: {\n    marginTop: \"25px\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  innerBox: {\n    margin: \"25px\",\n  },\n  buttonGroup: {\n    marginRight: \"25px\",\n  },\n  button: {\n    margin: \"10px\",\n    marginRight: \"90px\"\n  },\n  formControl: {\n    minWidth: \"200px\",\n  },\n  inputField: {\n    minWidth: \"150px\",\n  },\n  leftBox: {\n    width: \"800px\",\n    float: \"left\",\n  },\n  rightBox: {\n    width: \"400px\",\n    float: \"right\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 650,\n    margin: \"25px\"\n  },\n  buttonBox: {\n    justifyContent: \"center\",\n    marginLeft: \"-10px\",\n  }\n});\n\nfunction createUser(userName, surname, country, weight, height, gender, isImperialUnit) {\n  return { userName, surname, country, weight, height, gender, isImperialUnit};\n}\n\nconst rows = [\n  createUser(\"Berk\", \"Türkçapar\", \"Turkey\", 80, 180, \"Male\", \"false\"),\n  createUser(\"Mert\", \"Dönmez\", \"Turkey\", 80, 180, \"Male\", \"false\"),\n  createUser(\"Yiğit\", \"Ekin\", \"Turkey\", 80, 180, \"Male\", \"false\"),\n];\n\nconst Form = () => {\n  const classes = useStyles();\n\n  const [userName, setUserName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [weight, setWeight] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [gender, setGender] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [isImperialUnit, setIsImperialUnit] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  const switchRef = useRef();\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  useEffect(() => {\n    const usersData = localStorage.getItem(\"userData\");\n    JSON.parse(usersData)?.users &&\n    setUsers(JSON.parse(usersData).users);\n  }, []);\n\n  const surnameHandler = (value) => {\n    setSurname(value);\n  };\n\n  const userNameHandler = (value) => {\n    setUserName(value);\n  };\n\n  const weightHandler = (value) => {\n    setWeight(value);\n  };\n\n  const heightHandler = (value) => {\n    setHeight(value);\n  };\n\n  const genderHandler = (value) => {\n    setGender(value);\n  };\n\n  const unitHandler = () => {\n    setIsImperialUnit((oldState) => !oldState);\n  };\n\n  const countryHandler = (value) => {\n    setCountry(value);\n  };\n\n  const getSwitchInfo = () => {\n    console.log(switchRef);\n  };\n\n  const submitHandler = () => {\n    const userInfo = {\n      userName,\n      surname,\n      country,\n      weight,\n      height,\n      gender,\n      isImperialUnit,\n    };\n\n    const updatedUsers = [...users, userInfo];\n    setUsers(updatedUsers);\n    const currentUsers = JSON.stringify(updatedUsers);\n    const stringUserInfo = JSON.stringify(userInfo);\n    localStorage.setItem(\"userInformation\", stringUserInfo);\n    localStorage.setItem(\"userData\", currentUsers);\n  };\n\n  const getCountries = () => {\n    axios.get(\"https://countriesnow.space/api/v0.1/countries\").then((res) => {\n      const countryArr = res.data.data.map((countryItem, index) => {\n        return { countryName: countryItem.country, id: index };\n      });\n      setCountries(countryArr);\n    });\n  };\n\n  return (\n    <Box className={classes.box}>\n      <Box className={classes.leftBox}>\n        <Box className={classes.outerBox}>\n        <Box className={classes.innerBox}>\n          <TextField className={classes.inputField}\n            id=\"name-input\"\n            label=\"Name\"\n            variant=\"outlined\"\n            onChange={(e) => userNameHandler(e.target.value)}\n          />\n        </Box>\n        <Box className={classes.innerBox}>\n          <TextField className={classes.inputField}\n            required\n            id=\"surname-input\"\n            label=\"Surname\"\n            variant=\"outlined\"\n            onChange={(e) => surnameHandler(e.target.value)}\n          />\n        </Box>\n        <Box className={classes.innerBox}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"coutry-label\">Country</InputLabel>\n            <Select\n              labelId=\"country-label\"\n              id=\"country-select\"\n              value={country}\n              onChange={(e) => countryHandler(e.target.value)}\n            >\n              {countries.map((item) => (\n                <MenuItem key={item.id} value={item.id}>\n                  {item.countryName}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n      </Box>\n      <Box className={classes.outerBox}>\n        <Box className={classes.innerBox}>\n          <TextField className={classes.inputField}\n            label=\"Weight\"\n            type=\"number\"\n            id=\"weight-input\"\n            onChange={(e) => weightHandler(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {isImperialUnit ? \"Lbs\" : \"Kg\"}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n        <Box className={classes.innerBox}>\n          <TextField className={classes.inputField}\n            ref={switchRef}\n            label=\"Height\"\n            id=\"height-input\"\n            type=\"number\"\n            onChange={(e) => heightHandler(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {isImperialUnit ? \"Inc\" : \"Cm\"}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n        <Box className={classes.innerBox}>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isImperialUnit}\n                onChange={() => unitHandler()}\n                name=\"checkedA\"\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n              />\n            }\n            label=\"Is Unit Imperial\"\n            labelPlacement=\"top\"\n          />\n        </Box>\n      </Box>\n      </Box>\n      <Box className={classes.rightBox}>\n          <Box className={classes.innerBox}>\n          <FormControl\n            className={clsx(classes.buttonGroup, classes.button)}\n            component=\"fieldset\"\n          >\n            <FormLabel component=\"legend\">Gender</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender1\"\n              value={gender}\n              onChange={(e) => genderHandler(e.target.value)}\n            >\n              <FormControlLabel\n                value=\"female\"\n                control={<Radio />}\n                label=\"Female\"\n              />\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n              <FormControlLabel\n                value=\"other\"\n                control={<Radio />}\n                label=\"Other\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box className={classes.buttonBox}>\n            <Box className={classes.innerBox}>\n            <CustomButton\n              buttonFunction={() => submitHandler()}\n              buttonText={\"Submit\"}\n            ></CustomButton>\n          </Box>\n          <Box className={classes.innerBox}>\n            <CustomButton\n              buttonFunction={() => getSwitchInfo()}\n              buttonText={\"Get Ref Info\"}\n            ></CustomButton>\n          </Box>\n        </Box>\n        </Box>\n      <Box>\n        <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"left\">Name</TableCell>\n            <TableCell align=\"left\">Surname</TableCell>\n            <TableCell align=\"left\">Country</TableCell>\n            <TableCell align=\"left\">Weight</TableCell>\n            <TableCell align=\"left\">Height</TableCell>\n            <TableCell align=\"left\">Gender</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users.map((user) => (\n            <TableRow>\n              <TableCell align=\"left\">{user.userName}</TableCell>\n              <TableCell align=\"left\">{user.surname}</TableCell>\n              <TableCell align=\"left\">{countries[user.country].countryName}</TableCell>\n              <TableCell align=\"left\">{user.weight + (user.isImperialUnit ? \"(lbs)\":\"(kg)\")}</TableCell>\n              <TableCell align=\"left\">{user.height + (user.isImperialUnit ? \"(inch)\":\"(cm)\")}</TableCell>\n              <TableCell align=\"left\">{user.gender}</TableCell>\n            </TableRow>\n            ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}