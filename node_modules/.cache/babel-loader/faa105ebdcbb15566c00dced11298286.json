{"ast":null,"code":"var _jsxFileName = \"/Users/berkturkcapar/Desktop/internship-projects/liveCodingHomework/reactOneInternship/src/Pages/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport CustomButton from \"../components/CustomButton\";\nimport clsx from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  box: {\n    margin: \"100px\",\n    display: \"flex\"\n  },\n  outerBox: {\n    marginTop: \"25px\",\n    display: \"flex\"\n  },\n  innerBox: {\n    margin: \"25px\"\n  },\n  buttonGroup: {\n    marginRight: \"25px\"\n  },\n  button: {\n    margin: \"10px\",\n    marginRight: \"90px\"\n  },\n  formControl: {\n    minWidth: \"200px\"\n  },\n  inputField: {\n    minWidth: \"100px\"\n  },\n  halfBox: {\n    width: \"50%\"\n  }\n});\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const [userName, setUserName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [weight, setWeight] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [gender, setGender] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [isImperialUnit, setIsImperialUnit] = useState(false);\n  const switchRef = useRef();\n  useEffect(() => {\n    getCountries();\n  }, []);\n  useEffect(() => {\n    var _JSON$parse;\n\n    const savedUserInfo = localStorage.getItem(\"userInformation\");\n    ((_JSON$parse = JSON.parse(savedUserInfo)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.isImperialUnit) && setIsImperialUnit(JSON.parse(savedUserInfo).isImperialUnit);\n  }, []);\n\n  const surnameHandler = value => {\n    setSurname(value);\n  };\n\n  const userNameHandler = value => {\n    setUserName(value);\n  };\n\n  const weightHandler = value => {\n    setWeight(value);\n  };\n\n  const heightHandler = value => {\n    setHeight(value);\n  };\n\n  const genderHandler = value => {\n    setGender(value);\n  };\n\n  const unitHandler = () => {\n    setIsImperialUnit(oldState => !oldState);\n  };\n\n  const countryHandler = value => {\n    setCountry(value);\n  };\n\n  const getSwitchInfo = () => {\n    console.log(switchRef);\n  };\n\n  const submitHandler = () => {\n    const userInfo = {\n      surname,\n      weight,\n      height,\n      userName,\n      gender,\n      isImperialUnit,\n      country\n    };\n    const stringUserInfo = JSON.stringify(userInfo);\n    localStorage.setItem(\"userInformation\", stringUserInfo);\n  };\n\n  const getCountries = () => {\n    axios.get(\"https://countriesnow.space/api/v0.1/countries\").then(res => {\n      const countryArr = res.data.data.map((countryItem, index) => {\n        return {\n          countryName: countryItem.country,\n          id: index\n        };\n      });\n      setCountries(countryArr);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    classes: classes.box,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      classes: classes.halfBox,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classes.outerBox,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.inputField,\n            id: \"name-input\",\n            label: \"Name\",\n            variant: \"outlined\",\n            onChange: e => userNameHandler(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.inputField,\n            required: true,\n            id: \"surname-input\",\n            label: \"Surname\",\n            variant: \"outlined\",\n            onChange: e => surnameHandler(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"coutry-label\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"country-label\",\n              id: \"country-select\",\n              value: country,\n              onChange: e => countryHandler(e.target.value),\n              children: countries.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.id,\n                children: item.countryName\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.outerBox,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.inputField,\n            label: \"Weight\",\n            type: \"number\",\n            id: \"weight-input\",\n            onChange: e => weightHandler(e.target.value),\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: isImperialUnit ? \"Lbs\" : \"Kg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.inputField,\n            ref: switchRef,\n            label: \"Height\",\n            id: \"height-input\",\n            type: \"number\",\n            onChange: e => heightHandler(e.target.value),\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: isImperialUnit ? \"Inc\" : \"Cm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              checked: isImperialUnit,\n              onChange: () => unitHandler(),\n              name: \"checkedA\",\n              inputProps: {\n                \"aria-label\": \"secondary checkbox\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this),\n            label: \"Is Unit Imperial\",\n            labelPlacement: \"top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.outerBox,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: clsx(classes.buttonGroup, classes.button),\n            component: \"fieldset\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              \"aria-label\": \"gender\",\n              name: \"gender1\",\n              value: gender,\n              onChange: e => genderHandler(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"female\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 26\n                }, this),\n                label: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"male\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 55\n                }, this),\n                label: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"other\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 26\n                }, this),\n                label: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(CustomButton, {\n            buttonFunction: () => submitHandler(),\n            buttonText: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(CustomButton, {\n            buttonFunction: () => getSwitchInfo(),\n            buttonText: \"Get Ref Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      classes: classes.halfBox,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"nboSjKb4wPGqTvyMIr7C7OSXUmg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/berkturkcapar/Desktop/internship-projects/liveCodingHomework/reactOneInternship/src/Pages/Form.js"],"names":["React","useState","useEffect","useRef","TextField","Box","makeStyles","InputAdornment","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Switch","InputLabel","MenuItem","Select","axios","CustomButton","clsx","useStyles","box","margin","display","outerBox","marginTop","innerBox","buttonGroup","marginRight","button","formControl","minWidth","inputField","halfBox","width","Form","classes","userName","setUserName","surname","setSurname","weight","setWeight","height","setHeight","gender","setGender","country","setCountry","countries","setCountries","isImperialUnit","setIsImperialUnit","switchRef","getCountries","savedUserInfo","localStorage","getItem","JSON","parse","surnameHandler","value","userNameHandler","weightHandler","heightHandler","genderHandler","unitHandler","oldState","countryHandler","getSwitchInfo","console","log","submitHandler","userInfo","stringUserInfo","stringify","setItem","get","then","res","countryArr","data","map","countryItem","index","countryName","id","e","target","item","startAdornment"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport CustomButton from \"../components/CustomButton\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles({\n  box: {\n    margin: \"100px\",\n    display: \"flex\",\n  },\n  outerBox: {\n    marginTop: \"25px\",\n    display: \"flex\",\n  },\n  innerBox: {\n    margin: \"25px\",\n  },\n  buttonGroup: {\n    marginRight: \"25px\",\n  },\n  button: {\n    margin: \"10px\",\n    marginRight: \"90px\"\n  },\n  formControl: {\n    minWidth: \"200px\",\n  },\n  inputField: {\n    minWidth: \"100px\",\n  },\n  halfBox: {\n    width: \"50%\",\n  }\n});\n\nconst Form = () => {\n  const classes = useStyles();\n\n  const [userName, setUserName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [weight, setWeight] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [gender, setGender] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [isImperialUnit, setIsImperialUnit] = useState(false);\n\n  const switchRef = useRef();\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  useEffect(() => {\n    const savedUserInfo = localStorage.getItem(\"userInformation\");\n    JSON.parse(savedUserInfo)?.isImperialUnit &&\n      setIsImperialUnit(JSON.parse(savedUserInfo).isImperialUnit);\n  }, []);\n\n  const surnameHandler = (value) => {\n    setSurname(value);\n  };\n\n  const userNameHandler = (value) => {\n    setUserName(value);\n  };\n\n  const weightHandler = (value) => {\n    setWeight(value);\n  };\n\n  const heightHandler = (value) => {\n    setHeight(value);\n  };\n\n  const genderHandler = (value) => {\n    setGender(value);\n  };\n\n  const unitHandler = () => {\n    setIsImperialUnit((oldState) => !oldState);\n  };\n\n  const countryHandler = (value) => {\n    setCountry(value);\n  };\n\n  const getSwitchInfo = () => {\n    console.log(switchRef);\n  };\n\n  const submitHandler = () => {\n    const userInfo = {\n      surname,\n      weight,\n      height,\n      userName,\n      gender,\n      isImperialUnit,\n      country,\n    };\n\n    const stringUserInfo = JSON.stringify(userInfo);\n    localStorage.setItem(\"userInformation\", stringUserInfo);\n  };\n\n  const getCountries = () => {\n    axios.get(\"https://countriesnow.space/api/v0.1/countries\").then((res) => {\n      const countryArr = res.data.data.map((countryItem, index) => {\n        return { countryName: countryItem.country, id: index };\n      });\n\n      setCountries(countryArr);\n    });\n  };\n\n  return (\n    <Box classes={classes.box}>\n      <Box classes={classes.halfBox}>\n        <Box className={classes.outerBox}>\n        <Box className={classes.innerBox}>\n          <TextField className={classes.inputField}\n            id=\"name-input\"\n            label=\"Name\"\n            variant=\"outlined\"\n            onChange={(e) => userNameHandler(e.target.value)}\n          />\n        </Box>\n        <Box className={classes.innerBox}>\n          <TextField className={classes.inputField}\n            required\n            id=\"surname-input\"\n            label=\"Surname\"\n            variant=\"outlined\"\n            onChange={(e) => surnameHandler(e.target.value)}\n          />\n        </Box>\n        <Box className={classes.innerBox}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"coutry-label\">Country</InputLabel>\n            <Select\n              labelId=\"country-label\"\n              id=\"country-select\"\n              value={country}\n              onChange={(e) => countryHandler(e.target.value)}\n            >\n              {countries.map((item) => (\n                <MenuItem key={item.id} value={item.id}>\n                  {item.countryName}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n      </Box>\n      <Box className={classes.outerBox}>\n        <Box className={classes.innerBox}>\n          <TextField className={classes.inputField}\n            label=\"Weight\"\n            type=\"number\"\n            id=\"weight-input\"\n            onChange={(e) => weightHandler(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {isImperialUnit ? \"Lbs\" : \"Kg\"}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n        <Box className={classes.innerBox}>\n          <TextField className={classes.inputField}\n            ref={switchRef}\n            label=\"Height\"\n            id=\"height-input\"\n            type=\"number\"\n            onChange={(e) => heightHandler(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {isImperialUnit ? \"Inc\" : \"Cm\"}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n        <Box className={classes.innerBox}>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isImperialUnit}\n                onChange={() => unitHandler()}\n                name=\"checkedA\"\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n              />\n            }\n            label=\"Is Unit Imperial\"\n            labelPlacement=\"top\"\n          />\n        </Box>\n      </Box>\n      <Box className={classes.outerBox}>\n          <Box className={classes.innerBox}>\n          <FormControl\n            className={clsx(classes.buttonGroup, classes.button)}\n            component=\"fieldset\"\n          >\n            <FormLabel component=\"legend\">Gender</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender1\"\n              value={gender}\n              onChange={(e) => genderHandler(e.target.value)}\n            >\n              <FormControlLabel\n                value=\"female\"\n                control={<Radio />}\n                label=\"Female\"\n              />\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n              <FormControlLabel\n                value=\"other\"\n                control={<Radio />}\n                label=\"Other\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n          <Box className={classes.innerBox}>\n            <CustomButton\n              buttonFunction={() => submitHandler()}\n              buttonText={\"Submit\"}\n            ></CustomButton>\n          </Box>\n          <Box className={classes.innerBox}>\n            <CustomButton\n              buttonFunction={() => getSwitchInfo()}\n              buttonText={\"Get Ref Info\"}\n            ></CustomButton>\n          </Box>\n        </Box>\n      </Box>\n      <Box classes={classes.halfBox}>\n        <p>Hello World</p>\n      </Box>\n\n    </Box>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}