{"ast":null,"code":"var _jsxFileName = \"/Users/berkturkcapar/Desktop/internship-projects/liveCodingHomework/reactOneInternship/src/Pages/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport CustomButton from \"../components/CustomButton\";\nimport clsx from \"clsx\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  box: {\n    margin: \"100px\",\n    display: \"flex\"\n  },\n  outerBox: {\n    marginTop: \"25px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  innerBox: {\n    marginInline: \"25px\"\n  },\n  buttonGroup: {\n    marginRight: \"25px\"\n  },\n  button: {\n    margin: \"0.5rem\"\n  },\n  formControl: {\n    minWidth: 120\n  },\n  buttons: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: \"25px\"\n  },\n  table: {\n    marginRight: \"50px\",\n    backgroundColor: \"#3f51b5\"\n  },\n  tableHead: {\n    color: \"#ffffff\"\n  }\n});\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const [tableArray, setTableArray] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [weight, setWeight] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [gender, setGender] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [isImperialUnit, setIsImperialUnit] = useState(false);\n  const switchRef = useRef();\n  useEffect(() => {\n    getCountries();\n  }, []);\n  useEffect(() => {\n    var _JSON$parse;\n\n    const savedUserInfo = localStorage.getItem(\"userInformation\");\n    ((_JSON$parse = JSON.parse(savedUserInfo)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.isImperialUnit) && setIsImperialUnit(JSON.parse(savedUserInfo).isImperialUnit);\n  }, []);\n  useEffect(() => {\n    var _JSON$parse2;\n\n    const tableArrayData = localStorage.getItem(\"tableData\");\n    ((_JSON$parse2 = JSON.parse(tableArrayData)) === null || _JSON$parse2 === void 0 ? void 0 : _JSON$parse2.tableArray) && setTableArray(JSON.parse(tableArrayData).tableArray);\n  }, []);\n\n  const surnameHandler = value => {\n    setSurname(value);\n  };\n\n  const userNameHandler = value => {\n    setUserName(value);\n  };\n\n  const weightHandler = value => {\n    setWeight(value);\n  };\n\n  const heightHandler = value => {\n    setHeight(value);\n  };\n\n  const genderHandler = value => {\n    setGender(value);\n  };\n\n  const unitHandler = () => {\n    setIsImperialUnit(oldState => !oldState);\n  };\n\n  const countryHandler = value => {\n    setCountry(value);\n  };\n\n  const getSwitchInfo = () => {\n    console.log(switchRef);\n  };\n\n  const submitHandler = () => {\n    if (surname && weight >= 0 && height >= 0 && userName && gender && country) {\n      const userInfo = {\n        surname,\n        weight,\n        height,\n        userName,\n        gender,\n        isImperialUnit,\n        country\n      };\n      const newArray = [...tableArray, userInfo];\n      setTableArray(newArray);\n      const currentTableData = JSON.stringify(newArray);\n      const stringUserInfo = JSON.stringify(userInfo);\n      localStorage.setItem(\"userInformation\", stringUserInfo);\n      localStorage.setItem(\"tableData\", currentTableData);\n      console.log(newArray);\n    } else {\n      alert(\"Please enter all of the required values in order to display the data on the table\");\n    }\n  };\n\n  const getCountries = () => {\n    axios.get(\"https://countriesnow.space/api/v0.1/countries\").then(res => {\n      const countryArr = res.data.data.map(countryItem => {\n        return {\n          countryName: countryItem.country,\n          id: countryItem.country\n        };\n      });\n      setCountries(countryArr);\n    });\n  };\n\n  const clearTable = () => {\n    setTableArray([]);\n    localStorage.setItem(\"tableData\", []);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      classes: classes.box,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classes.outerBox,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"name-input\",\n            label: \"Name\",\n            variant: \"outlined\",\n            onChange: e => userNameHandler(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"surname-input\",\n            label: \"Surname\",\n            variant: \"outlined\",\n            onChange: e => surnameHandler(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"coutry-label\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"country-label\",\n              id: \"country-select\",\n              value: country,\n              onChange: e => countryHandler(e.target.value),\n              children: countries.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.id,\n                children: item.countryName\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.outerBox,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: clsx(classes.buttonGroup, classes.button),\n            component: \"fieldset\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              component: \"legend\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n              \"aria-label\": \"gender\",\n              name: \"gender1\",\n              value: gender,\n              onChange: e => genderHandler(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"female\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 26\n                }, this),\n                label: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"male\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 55\n                }, this),\n                label: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: \"other\",\n                control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 26\n                }, this),\n                label: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Weight\",\n            type: \"number\",\n            id: \"weight-input\",\n            onChange: e => weightHandler(e.target.value),\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: isImperialUnit ? \"Lbs\" : \"Kg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.innerBox,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            ref: switchRef,\n            label: \"Height\",\n            id: \"height-input\",\n            type: \"number\",\n            onChange: e => heightHandler(e.target.value),\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: isImperialUnit ? \"Inc\" : \"Cm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.outerBox,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.innerBox,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: isImperialUnit,\n                onChange: () => unitHandler(),\n                name: \"checkedA\",\n                inputProps: {\n                  \"aria-label\": \"secondary checkbox\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 15\n              }, this),\n              label: \"Is Unit Imperial\",\n              labelPlacement: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.outerBox,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.buttons,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: classes.innerBox,\n            children: /*#__PURE__*/_jsxDEV(CustomButton, {\n              buttonFunction: () => submitHandler(),\n              buttonText: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.innerBox,\n            children: /*#__PURE__*/_jsxDEV(CustomButton, {\n              buttonFunction: () => getSwitchInfo(),\n              buttonText: \"Get Ref Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.innerBox,\n            children: /*#__PURE__*/_jsxDEV(CustomButton, {\n              buttonFunction: () => clearTable(),\n              buttonText: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: classes.table,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"UserData Table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          className: classes.tableHead,\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              className: classes.tableHead,\n              children: \"userName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              className: classes.tableHead,\n              children: \"surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHead,\n              align: \"left\",\n              children: \"weight\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHead,\n              align: \"left\",\n              children: \"height\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHead,\n              align: \"left\",\n              children: \"gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHead,\n              align: \"left\",\n              children: \"country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: tableArray.map((person, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              className: classes.tableHead,\n              children: person.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHead,\n              align: \"left\",\n              children: person.surname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHead,\n              align: \"left\",\n              children: person.weight + (person.isImperialUnit ? \"(LBS)\" : \"(KG)\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHead,\n              align: \"left\",\n              children: person.height + (person.isImperialUnit ? \"(INC)\" : \"(CM)\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHead,\n              align: \"left\",\n              children: person.gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHead,\n              align: \"left\",\n              children: person.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"hG1o2l5g3qxkI2puXPyUIBKxfvI=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/berkturkcapar/Desktop/internship-projects/liveCodingHomework/reactOneInternship/src/Pages/Form.js"],"names":["React","useState","useEffect","useRef","TextField","Box","makeStyles","InputAdornment","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","Switch","InputLabel","MenuItem","Select","axios","CustomButton","clsx","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","box","margin","display","outerBox","marginTop","alignItems","justifyContent","innerBox","marginInline","buttonGroup","marginRight","button","formControl","minWidth","buttons","marginBottom","table","backgroundColor","tableHead","color","Form","classes","tableArray","setTableArray","userName","setUserName","surname","setSurname","weight","setWeight","height","setHeight","gender","setGender","country","setCountry","countries","setCountries","isImperialUnit","setIsImperialUnit","switchRef","getCountries","savedUserInfo","localStorage","getItem","JSON","parse","tableArrayData","surnameHandler","value","userNameHandler","weightHandler","heightHandler","genderHandler","unitHandler","oldState","countryHandler","getSwitchInfo","console","log","submitHandler","userInfo","newArray","currentTableData","stringify","stringUserInfo","setItem","alert","get","then","res","countryArr","data","map","countryItem","countryName","id","clearTable","e","target","item","startAdornment","person","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport axios from \"axios\";\nimport CustomButton from \"../components/CustomButton\";\nimport clsx from \"clsx\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst useStyles = makeStyles({\n  box: {\n    margin: \"100px\",\n    display: \"flex\",\n  },\n  outerBox: {\n    marginTop: \"25px\",\n    display: \"flex\",\n    alignItems:\"center\",\n    justifyContent: \"center\"\n  },\n  innerBox: {\n    marginInline: \"25px\",\n  },\n  buttonGroup: {\n    marginRight: \"25px\",\n  },\n  button: {\n    margin: \"0.5rem\",\n  },\n  formControl: {\n    minWidth: 120,\n  },\n  buttons: {\n    display:\"flex\",\n    alignItems:\"center\",\n    justifyContent: \"center\",\n    marginBottom: \"25px\"\n  },\n  table:{\n    marginRight: \"50px\",\n    backgroundColor:\"#3f51b5\",\n  },\n  tableHead: {\n    color: \"#ffffff\"\n  }\n});\n\nconst Form = () => {\n  const classes = useStyles();\n\n  const [tableArray, setTableArray] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [weight, setWeight] = useState(0);\n  const [height, setHeight] = useState(0);\n  const [gender, setGender] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [isImperialUnit, setIsImperialUnit] = useState(false);\n\n  const switchRef = useRef();\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  useEffect(() => {\n    const savedUserInfo = localStorage.getItem(\"userInformation\");\n    JSON.parse(savedUserInfo)?.isImperialUnit &&\n      setIsImperialUnit(JSON.parse(savedUserInfo).isImperialUnit);\n  }, []);\n\n  useEffect(() => {\n    const tableArrayData = localStorage.getItem(\"tableData\");\n    JSON.parse(tableArrayData)?.tableArray &&\n   setTableArray(JSON.parse(tableArrayData).tableArray);\n  },[])\n\n\n  const surnameHandler = (value) => {\n    setSurname(value);\n  };\n\n  const userNameHandler = (value) => {\n    setUserName(value);\n  };\n\n  const weightHandler = (value) => {\n    setWeight(value);\n  };\n\n  const heightHandler = (value) => {\n    setHeight(value);\n  };\n\n  const genderHandler = (value) => {\n    setGender(value);\n  };\n\n  const unitHandler = () => {\n    setIsImperialUnit((oldState) => !oldState);\n  };\n\n  const countryHandler = (value) => {\n    setCountry(value);\n  };\n\n  const getSwitchInfo = () => {\n    console.log(switchRef);\n  };\n\n  const submitHandler = () => {\n    if (surname && (weight >= 0) && (height >= 0) && userName && gender && country) {\n      const userInfo = {\n        surname,\n        weight,\n        height,\n        userName,\n        gender,\n        isImperialUnit,\n        country,\n      };\n      const newArray = [...tableArray, userInfo];\n      setTableArray(newArray);\n      const currentTableData = JSON.stringify(newArray);\n      const stringUserInfo = JSON.stringify(userInfo);\n      localStorage.setItem(\"userInformation\", stringUserInfo);\n      localStorage.setItem(\"tableData\", currentTableData);\n      console.log(newArray);\n    }\n    else {\n      alert(\"Please enter all of the required values in order to display the data on the table\");\n    }\n  };\n\n  const getCountries = () => {\n    axios.get(\"https://countriesnow.space/api/v0.1/countries\").then((res) => {\n      const countryArr = res.data.data.map((countryItem) => {\n        return { countryName: countryItem.country, id: countryItem.country };\n      });\n\n      setCountries(countryArr);\n    });\n  };\n\n  const clearTable = () => {\n    setTableArray([]);\n    localStorage.setItem(\"tableData\", []);\n  }\n\n  return (\n      <>\n    <Box classes={classes.box}>\n      <Box className={classes.outerBox}>\n        <Box className={classes.innerBox}>\n          <TextField\n            id=\"name-input\"\n            label=\"Name\"\n            variant=\"outlined\"\n            onChange={(e) => userNameHandler(e.target.value)}\n          />\n        </Box>\n        <Box className={classes.innerBox}>\n          <TextField\n            required\n            id=\"surname-input\"\n            label=\"Surname\"\n            variant=\"outlined\"\n            onChange={(e) => surnameHandler(e.target.value)}\n          />\n        </Box>\n        <Box className={classes.innerBox}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"coutry-label\">Country</InputLabel>\n            <Select\n              labelId=\"country-label\"\n              id=\"country-select\"\n              value={country}\n              onChange={(e) => countryHandler(e.target.value)}\n            >\n              {countries.map((item) => (\n                <MenuItem key={item.id} value={item.id}>\n                  {item.countryName}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Box>\n      </Box>\n      <Box className={classes.outerBox}>\n        <Box className={classes.innerBox}>\n          <FormControl\n            className={clsx(classes.buttonGroup, classes.button)}\n            component=\"fieldset\"\n          >\n            <FormLabel component=\"legend\">Gender</FormLabel>\n            <RadioGroup\n              aria-label=\"gender\"\n              name=\"gender1\"\n              value={gender}\n              onChange={(e) => genderHandler(e.target.value)}\n            >\n              <FormControlLabel\n                value=\"female\"\n                control={<Radio />}\n                label=\"Female\"\n              />\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n              <FormControlLabel\n                value=\"other\"\n                control={<Radio />}\n                label=\"Other\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box className={classes.innerBox}>\n          <TextField\n            label=\"Weight\"\n            type=\"number\"\n            id=\"weight-input\"\n            onChange={(e) => weightHandler(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {isImperialUnit ? \"Lbs\" : \"Kg\"}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n        <Box className={classes.innerBox}>\n          <TextField\n            ref={switchRef}\n            label=\"Height\"\n            id=\"height-input\"\n            type=\"number\"\n            onChange={(e) => heightHandler(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  {isImperialUnit ? \"Inc\" : \"Cm\"}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n        <Box className={classes.outerBox}>\n        <Box className={classes.innerBox}>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isImperialUnit}\n                onChange={() => unitHandler()}\n                name=\"checkedA\"\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n              />\n            }\n            label=\"Is Unit Imperial\"\n            labelPlacement=\"top\"\n          />\n        </Box>\n      </Box>\n    </Box>\n      <Box className={classes.outerBox}>\n        <Box className={classes.buttons}>\n          <Box className={classes.innerBox}>\n            <CustomButton\n                buttonFunction={() => submitHandler()}\n                buttonText={\"Submit\"}\n            ></CustomButton>\n          </Box>\n          <Box className={classes.innerBox}>\n            <CustomButton\n                buttonFunction={() => getSwitchInfo()}\n                buttonText={\"Get Ref Info\"}\n            ></CustomButton>\n          </Box>\n          <Box className={classes.innerBox}>\n            <CustomButton\n                buttonFunction={() => clearTable()}\n                buttonText={\"Clear\"}\n            ></CustomButton>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n        <TableContainer component={Paper} className={classes.table}>\n          <Table aria-label=\"UserData Table\" >\n            <TableHead className={classes.tableHead}>\n              <TableRow>\n                <TableCell align=\"left\" className={classes.tableHead}>userName</TableCell>\n                <TableCell  align=\"left\" className={classes.tableHead}>surname</TableCell>\n                <TableCell className={classes.tableHead} align=\"left\">weight</TableCell>\n                <TableCell className={classes.tableHead} align=\"left\">height</TableCell>\n                <TableCell className={classes.tableHead} align=\"left\">gender</TableCell>\n                <TableCell className={classes.tableHead} align=\"left\">country</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tableArray.map((person, index) => (\n                  <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\" className={classes.tableHead} >\n                      {person.userName}\n                    </TableCell>\n                    <TableCell className={classes.tableHead} align=\"left\">{person.surname}</TableCell>\n                    <TableCell className={classes.tableHead} align=\"left\">{person.weight + (person.isImperialUnit? \"(LBS)\" : \"(KG)\")}</TableCell>\n                    <TableCell className={classes.tableHead} align=\"left\">{person.height + (person.isImperialUnit? \"(INC)\" : \"(CM)\")}</TableCell>\n                    <TableCell className={classes.tableHead} align=\"left\">{person.gender}</TableCell>\n                    <TableCell className={classes.tableHead} align=\"left\">{person.country}</TableCell>\n                  </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </>\n  );\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}